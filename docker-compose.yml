version: '3.4'

services:
  desafiobackend.webapi:
    image: ${DOCKER_REGISTRY-}desafiobackendwebapi
    container_name: DesafioBackEnd.WebApi
    build:
      context: .
      dockerfile: source/DesafioBackEnd.WebApi/Dockerfile
    networks:
      - desafiobackendnetwork
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5000
    ports:
      - 5000:5000

  desafiobackend.database:
    image: postgres:latest
    container_name: DesafioBackEnd.Database
    environment:
      - POSTGRES_DB=desafiobackend
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/db:/var/lib/postegresql/data
    ports:
      - 5432:5432
    networks:
      - desafiobackendnetwork

  desafiobackend.rabbitmq:
    image: rabbitmq:3.11.7-management
    container_name: DesafioBackEnd.Queue
    hostname: desafiobackend-queue
    volumes:
      - ./.containers/queue/data/:/var/lib/rabbitmq
      - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: mq_user
      RABBITMQ_DEFAULT_PASS: secret
    ports:
      - 25672:25672
      - 15672:15672
      - 5672:5672
    networks:
      - desafiobackendnetwork

networks:
  desafiobackendnetwork:
    name: desafiobackendnetwork
    driver: bridge